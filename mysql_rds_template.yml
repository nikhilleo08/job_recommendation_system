Parameters:
  App:
    Type: String
    Description: Your application's name.
  Env:
    Type: String
    Description: The environment name your service, job, or workflow is being deployed to.
  Name:
    Type: String
    Description: The name of the service, job, or workflow being deployed.
    Default: python_fastapi_template
  # Customize your Aurora Serverless cluster by setting the default value of the following parameters.
  pythonFastApiTemplateclusterDBName:
    Type: String
    Description: The name of the initial database to be created in the DB cluster.
    Default: python_fastapi_template_db
    # Cannot have special characters
    # Naming constraints: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints
  pythonFastApiTemplateclusterDBAutoPauseSeconds:
    Type: Number
    Description: The duration in seconds before the cluster pauses.
    Default: 1000
Mappings:
  pythonFastApiTemplateclusterEnvScalingConfigurationMap:
    prod:
      "DBMinCapacity": 1 # AllowedValues: [1, 2, 4, 8, 16, 32, 64, 128, 256]
      "DBMaxCapacity": 8 # AllowedValues: [1, 2, 4, 8, 16, 32, 64, 128, 256]
    All:
      "DBMinCapacity": 1 # AllowedValues: [1, 2, 4, 8, 16, 32, 64, 128, 256]
      "DBMaxCapacity": 8 # AllowedValues: [1, 2, 4, 8, 16, 32, 64, 128, 256]

Resources:
  pythonFastApiTemplateclusterDBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: Group of Copilot private subnets for Aurora cluster.
      SubnetIds:
        !Split [',', { 'Fn::ImportValue': !Sub '${App}-${Env}-PrivateSubnets' }]
  pythonFastApiTemplateclusterSecurityGroup:
    Metadata:
      'aws:copilot:description': 'A security group for your workload to access the DB cluster pythonFastApiTemplatecluster'
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub 'The Security Group for ${Name} to access DB cluster pythonFastApiTemplatecluster.'
      VpcId:
        Fn::ImportValue:
          !Sub '${App}-${Env}-VpcId'
      Tags:
        - Key: Name
          Value: !Sub 'copilot-${App}-${Env}-${Name}-Aurora'
  pythonFastApiTemplateclusterDBClusterSecurityGroup:
    Metadata:
      'aws:copilot:description': 'A security group for your DB cluster pythonFastApiTemplatecluster'
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: The Security Group for the database cluster.
      SecurityGroupIngress:
        - ToPort: 3306
          FromPort: 3306
          IpProtocol: tcp
          SourceSecurityGroupId:
            Fn::ImportValue:
              !Sub '${App}-${Env}-EnvironmentSecurityGroup'
          Description: Allow incoming connections from any IP address.
      VpcId:
        Fn::ImportValue:
          !Sub '${App}-${Env}-VpcId'
      Tags:
        - Key: Name
          Value: !Sub 'copilot-${App}-${Env}-${Name}-Aurora'
  pythonFastApiTemplateclusterAuroraSecret:
    Metadata:
      'aws:copilot:description': 'A Secrets Manager secret to store your DB credentials'
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: !Sub Aurora main user secret for ${AWS::StackName}
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey: "password"
        ExcludePunctuation: true
        IncludeSpace: false
        PasswordLength: 16
  pythonFastApiTemplateclusterDBClusterParameterGroup:
    Metadata:
      'aws:copilot:description': 'A DB parameter group for engine configuration values'
    Type: 'AWS::RDS::DBClusterParameterGroup'
    Properties:
      Description: !Ref 'AWS::StackName'
      Family: 'aurora-mysql5.7'
      Parameters:
        character_set_client: 'utf8'
  pythonFastApiTemplateclusterDBCluster:
    Metadata:
      'aws:copilot:description': 'The pythonFastApiTemplatecluster Aurora Serverless database cluster'
    Type: 'AWS::RDS::DBCluster'
    Properties:
      MasterUsername:
        !Join [ "",  [ '{{resolve:secretsmanager:', !Ref pythonFastApiTemplateclusterAuroraSecret, ":SecretString:username}}" ]]
      MasterUserPassword:
        !Join [ "",  [ '{{resolve:secretsmanager:', !Ref pythonFastApiTemplateclusterAuroraSecret, ":SecretString:password}}" ]]
      DatabaseName: !Ref pythonFastApiTemplateclusterDBName
      Engine: 'aurora-mysql'
      EngineVersion: '5.7.mysql_aurora.2.07.1'
      EngineMode: serverless
      DBClusterParameterGroupName: !Ref pythonFastApiTemplateclusterDBClusterParameterGroup
      DBSubnetGroupName: !Ref pythonFastApiTemplateclusterDBSubnetGroup
      VpcSecurityGroupIds:
        - !Ref pythonFastApiTemplateclusterDBClusterSecurityGroup
      ScalingConfiguration:
        AutoPause: true
        # Replace "All" below with "!Ref Env" to set different autoscaling limits per environment.
        MinCapacity: !FindInMap [pythonFastApiTemplateclusterEnvScalingConfigurationMap, All, DBMinCapacity]
        MaxCapacity: !FindInMap [pythonFastApiTemplateclusterEnvScalingConfigurationMap, All, DBMaxCapacity]
        SecondsUntilAutoPause: !Ref pythonFastApiTemplateclusterDBAutoPauseSeconds
  pythonFastApiTemplateclusterSecretAuroraClusterAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref pythonFastApiTemplateclusterAuroraSecret
      TargetId: !Ref pythonFastApiTemplateclusterDBCluster
      TargetType: AWS::RDS::DBCluster
Outputs:
  pythonFastApiTemplateclusterSecret: # injected as pythonFastApiTemplateCLUSTER_SECRET environment variable by Copilot.
    Description: "The JSON secret that holds the database username and password. Fields are 'host', 'port', 'dbname', 'username', 'password', 'dbClusterIdentifier' and 'engine'"
    Value: !Ref pythonFastApiTemplateclusterAuroraSecret
    Export:
      Name: pythonFastApiTemplateclusterSecret
  pythonFastApiTemplateclusterSecurityGroup:
    Description: "The security group to attach to the workload."
    Value: !Ref pythonFastApiTemplateclusterSecurityGroup
